$date
	Tue Apr 22 15:31:52 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb $end
$var wire 3 ! y [2:0] $end
$var reg 3 " a [2:0] $end
$var reg 3 # b [2:0] $end
$var reg 3 $ c [2:0] $end
$var reg 3 % d [2:0] $end
$var reg 1 & en $end
$var reg 2 ' se [1:0] $end
$scope module uut $end
$var wire 3 ( a [2:0] $end
$var wire 3 ) b [2:0] $end
$var wire 3 * c [2:0] $end
$var wire 3 + d [2:0] $end
$var wire 1 & en $end
$var wire 2 , se [1:0] $end
$var reg 3 - y [2:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 -
b0 ,
b11 +
b10 *
b1 )
b0 (
b0 '
1&
b11 %
b10 $
b1 #
b0 "
b0 !
$end
#10000
b1 !
b1 -
b1 '
b1 ,
#20000
b10 !
b10 -
b10 '
b10 ,
#30000
b11 !
b11 -
b11 '
b11 ,
#40000
bz !
bz -
b10 '
b10 ,
0&
#50000
